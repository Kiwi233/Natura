/*
 * Natura
 * Master build file
 * Based on TConstruct's master build file
 * Authors: Sunstrike, ProgWML6
 * Help from AbrarSyed
 */

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'

repositories {
    maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'ForgeFS'
        url 'http://files.minecraftforge.net/maven'
    }
    maven {
        name 'MCMultiPart'
        url 'http://maven.amadornes.com/'
    }
    maven {
         name "Tehnut Maven FS"
         url "http://tehnut.info/maven"
    }
}

group = 'com.progwml6.natura'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    deobfCompile "net.minecraftforge.lex:YUNoMakeGoodMap:${minecraft_version}-${yunomakegoodmap_version}"
    deobfCompile "slimeknights.mantle:Mantle:${minecraft_version}-${mantle_version}"
    deobfCompile "slimeknights:TConstruct:${minecraft_version}-${tconstruct_version}"

    deobfCompile "mcp.mobius.waila:Hwyla:${hwyla_version}_${minecraft_version}"

    deobfCompile "mezz.jei:jei_${minecraft_version}:${jei_version}"

    deobfCompile "MCMultiPart:MCMultiPart-experimental:${mcmultipart_version}:universal"
}

// sets version to the slimeKnights version format
task buildInfo {
    def cmd = "git rev-parse --short HEAD"
    def proc = cmd.execute()
    proc.waitFor()
    if (proc.exitValue() == 0) {
        ext.revision = proc.text.trim()
    } else {
        ext.revision = "GITBORK"
    }

    if (System.getenv().BUILD_NUMBER != null) {
        ext.buildNum = System.getenv().BUILD_NUMBER
    } else {
        ext.buildNum = "DEV.${project.buildInfo.revision}"
    }
}
version = "${minecraft_version}-${mod_version}.${project.buildInfo.buildNum}"

minecraft {
    version = minecraft_version + "-" + forge_version
    mappings = mappings_version
    runDir = "run"
    replace '${version}', project.version
    useDepAts = true
}

processResources
{
    // replace stuff in text files, not binary ones.
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        // replace version and MCVersion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    // copy everything else, thats not text
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}

// because the normal output has been made to be obfuscated
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
        }
    }

    repositories {
        if (project.hasProperty('DEPLOY_DIR')) {
            maven { url DEPLOY_DIR }
        }
    }
}